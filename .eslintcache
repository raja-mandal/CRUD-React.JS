[{"G:\\Jivandeep 2021\\admin panel\\admin\\src\\components\\layout\\Dashboard\\DashboardComp.js":"1","G:\\Jivandeep 2021\\admin panel\\admin\\src\\components\\layout\\Pagination\\Pagination.js":"2","G:\\Jivandeep 2021\\admin panel\\admin\\src\\reportWebVitals.js":"3","G:\\Jivandeep 2021\\admin panel\\admin\\src\\components\\users\\ViewUser.js":"4","G:\\Jivandeep 2021\\admin panel\\admin\\src\\components\\layout\\Signin\\Signin.js":"5","G:\\Jivandeep 2021\\admin panel\\admin\\src\\components\\layout\\Navbar\\Navbar.js":"6"},{"size":5034,"mtime":1612602170381,"results":"7","hashOfConfig":"8"},{"size":2879,"mtime":1612527917211,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610525388349,"results":"10","hashOfConfig":"8"},{"size":942,"mtime":1612441283935,"results":"11","hashOfConfig":"8"},{"size":3821,"mtime":1612254670038,"results":"12","hashOfConfig":"8"},{"size":3015,"mtime":1612592320168,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"d3tbip",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\Jivandeep 2021\\admin panel\\admin\\src\\components\\layout\\Dashboard\\DashboardComp.js",["28","29","30"],"import React, { useState, useEffect } from 'react';\r\nimport './DashboardTable.css';\r\n// import AddUser from '../../../components/users/AddUser';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardComp = () => {\r\n\r\n    //   user's data\r\n    const [users, setUser] = useState([])\r\n\r\n    //  search filter\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n\r\n\r\n    // show per page\r\n    // const [showPerPage, setShowPerPage] = useState(5)\r\n\r\n    // table pagination\r\n    // const [pagination, setPagination] = useState({\r\n    //     start: 0,\r\n    //     end: showPerPage,\r\n    // })\r\n\r\n    //    pagination count\r\n    // const onPaginationChange = (start, end) => {\r\n    //     console.log(start, end);\r\n    //     setPagination({ start: start, end: end })\r\n    // }\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, [])\r\n\r\n    // user's api data\r\n    const loadUsers = async () => {\r\n        const result = await axios.get('http://localhost:3002/users');\r\n        console.log('users data', result.data)\r\n        setUser(result.data.reverse());\r\n        // console.log(result.data);\r\n    }\r\n\r\n    // implement delete function\r\n    const deleteUser = async id => {\r\n        await axios.delete(`http://localhost:3002/users/${id}`);\r\n        loadUsers();\r\n    }\r\n    // end implement delete function\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"text-left pt-4\">Dashboard</h2>\r\n            <div className=\"table-responsive shadow\" style={{ height: 450 }}>\r\n                <div className=\"table-wrapper\">\r\n                    <div className=\"table-title\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"btn-box\">\r\n                                    <Link to=\"/users/add\" type=\"button\" class=\"btn btn-outline-primary btn-sm\">Add User</Link>\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"col-sm-8\"></div> */}\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"search-box\">\r\n                                    <i className=\"material-icons\"></i>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Search by name\" onChange={event => { setSearchTerm(event.target.value) }} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <table className=\"table table-striped table-hover table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                {/* <th>#</th> */}\r\n                                <th>Name <i className=\"fa fa-sort\" /></th>\r\n                                <th>Username</th>\r\n                                <th>Email <i className=\"fa fa-sort\" /></th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                users.filter((user) => {\r\n                                    if (searchTerm == \"\") {\r\n                                        return user\r\n                                    } else if (user.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                                        return user\r\n                                    }\r\n                                }).map((user, index) => (\r\n                                    <tr key={user.id}>\r\n                                        {/* <th scope=\"row\">{index + 1}</th> */}\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.username}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>\r\n                                            <Link to={`/users/view/${user.id}`} className=\"view\" title=\"View\" data-toggle=\"tooltip\"><i className=\"material-icons\"></i></Link>\r\n                                            <Link to={`/users/edit/${user.id}`} className=\"edit\" title=\"Edit\" data-toggle=\"tooltip\"><i className=\"material-icons\"></i></Link>\r\n                                            <Link href=\"#\" className=\"delete\" title=\"Delete\" data-toggle=\"tooltip\" onClick={() => deleteUser(user.id)}><i className=\"material-icons\"></i></Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    {/* <Pagination showPerPage={showPerPage} onPaginationChange={onPaginationChange} total={users.length} /> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardComp;\r\n","G:\\Jivandeep 2021\\admin panel\\admin\\src\\components\\layout\\Pagination\\Pagination.js",["31","32"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst Pagination = ({ showPerPage, onPaginationChange, total }) => {\r\n    // console.log(showPerPage + 'showPerPage')\r\n    const [counter, setCounter] = useState(1)\r\n    // number of page\r\n    const [numberofButtons, setNumberofButtons] = useState(Math.ceil(total / showPerPage))\r\n\r\n    useEffect(() => {\r\n        // console.log('Object')\r\n        const value = showPerPage * counter;\r\n        // console.log(\"start value:\", value - showPerPage)\r\n        // console.log(\"end value:\", value)\r\n        onPaginationChange(value - showPerPage, value)\r\n    }, [counter])\r\n\r\n    const onButtonClick = (type) => {\r\n        if (type === \"prev\") {\r\n            if (counter === 1) {\r\n                setCounter(1)\r\n            } else {\r\n                setCounter(counter - 1)\r\n            }\r\n        } else if (type === \"next\") {\r\n            if (numberofButtons === counter) {\r\n                setCounter(counter)\r\n            } else {\r\n                setCounter(counter + 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            {/* pagination ui */}\r\n            <nav>\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item disabled\">\r\n                        <a className=\"page-link\" href=\"!#\" tabIndex={-1} aria-disabled=\"true\" onClick={() => onButtonClick('prev')}>Prev</a>\r\n                    </li>\r\n                    <li className=\"page-item\"><a className=\"page-link\" href=\"!#\">1</a></li>\r\n\r\n                    {new Array(numberofButtons).fill(\"\").map((el, index) => (\r\n                        <li class={`page-item ${index + 1 === counter ? \"active\" : null}`}>\r\n                            <a\r\n                                class=\"page-link\"\r\n                                href=\"!#\"\r\n                                onClick={() => setCounter(index + 1)}\r\n                            >\r\n                                {index + 1}\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n\r\n                    <li className=\"page-item active\" aria-current=\"page\">\r\n                        <a className=\"page-link\" href=\"!#\">2</a>\r\n                    </li>\r\n                    <li className=\"page-item\"><a className=\"page-link\" href=\"!#\">3</a></li>\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" href=\"!#\" onClick={() => onButtonClick('next')}>Next</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n\r\n            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => onButtonClick('prev')}>Previous</button>\r\n            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => onButtonClick('next')}>Next</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","G:\\Jivandeep 2021\\admin panel\\admin\\src\\reportWebVitals.js",[],"G:\\Jivandeep 2021\\admin panel\\admin\\src\\components\\users\\ViewUser.js",["33","34"],"G:\\Jivandeep 2021\\admin panel\\admin\\src\\components\\layout\\Signin\\Signin.js",["35","36","37","38","39"],"G:\\Jivandeep 2021\\admin panel\\admin\\src\\components\\layout\\Navbar\\Navbar.js",["40","41"],{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":18},{"ruleId":"46","severity":1,"message":"47","line":85,"column":53,"nodeType":"48","messageId":"49","endLine":85,"endColumn":55},{"ruleId":"50","severity":1,"message":"51","line":86,"column":52,"nodeType":"52","messageId":"53","endLine":86,"endColumn":54},{"ruleId":"42","severity":1,"message":"54","line":7,"column":29,"nodeType":"44","messageId":"45","endLine":7,"endColumn":47},{"ruleId":"55","severity":1,"message":"56","line":15,"column":8,"nodeType":"57","endLine":15,"endColumn":17,"suggestions":"58"},{"ruleId":"42","severity":1,"message":"59","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":14},{"ruleId":"55","severity":1,"message":"60","line":18,"column":8,"nodeType":"57","endLine":18,"endColumn":10,"suggestions":"61"},{"ruleId":"42","severity":1,"message":"62","line":6,"column":10,"nodeType":"44","messageId":"45","endLine":6,"endColumn":24},{"ruleId":"42","severity":1,"message":"63","line":6,"column":33,"nodeType":"44","messageId":"45","endLine":6,"endColumn":37},{"ruleId":"42","severity":1,"message":"64","line":6,"column":39,"nodeType":"44","messageId":"45","endLine":6,"endColumn":45},{"ruleId":"65","severity":1,"message":"66","line":52,"column":107,"nodeType":"67","endLine":52,"endColumn":119},{"ruleId":"65","severity":1,"message":"66","line":66,"column":105,"nodeType":"67","endLine":66,"endColumn":120},{"ruleId":"68","severity":1,"message":"69","line":8,"column":17,"nodeType":"70","endLine":8,"endColumn":98},{"ruleId":"68","severity":1,"message":"69","line":15,"column":29,"nodeType":"70","endLine":15,"endColumn":62},"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setNumberofButtons' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onPaginationChange' and 'showPerPage'. Either include them or remove the dependency array. If 'onPaginationChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["71"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["72"],"'ToastContainer' is defined but never used.","'zoom' is defined but never used.","'Bounce' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [counter, onPaginationChange, showPerPage]",{"range":"77","text":"78"},"Update the dependencies array to be: [loadUser]",{"range":"79","text":"80"},[610,619],"[counter, onPaginationChange, showPerPage]",[401,403],"[loadUser]"]